generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//tabla central
model Parque {
  id                  Int              @id @default(autoincrement())
  nombre              String
  descripcion         String
  imagen              String
  direccion           String
  latitud             Float
  longitud            Float
  fechaDecreto        String
  superficieTerrestre Float
  superficieMarina    Float
  clicks              Int
  encargado           encargadoParque?

  anuncios    Anuncio[]
  horario     Horario[]
  actividades ActividadParque[]
  flora       FloraParque[]
  fauna       FaunaParque[]
  categoria   CategoriaParque[]
  estado      EstadoParque[]
  region      RegionParque[]
  CartaRuta   CartaRuta[]
}

model encargadoParque {
  id       Int    @id @default(autoincrement())
  nombre   String
  telefono String
  parque   Parque @relation(fields: [parqueId], references: [id])
  parqueId Int    @unique

}

//tablas N:N
model Estado {
  id     Int            @id @default(autoincrement())
  nombre String
  parque EstadoParque[]
}

model EstadoParque {
  parque     Parque   @relation(fields: [parqueId], references: [id])
  parqueId   Int
  estado     Estado   @relation(fields: [estadoId], references: [id])
  estadoId   Int
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([parqueId, estadoId])
}

model Region {
  id     Int            @id @default(autoincrement())
  nombre String
  parque RegionParque[]
}

model RegionParque {
  parque     Parque   @relation(fields: [parqueId], references: [id])
  parqueId   Int
  region     Region   @relation(fields: [regionId], references: [id])
  regionId   Int
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([parqueId, regionId])
}

model Categoria {
  id     Int               @id @default(autoincrement())
  nombre String
  parque CategoriaParque[]
}

model CategoriaParque {
  parque      Parque    @relation(fields: [parqueId], references: [id])
  parqueId    Int
  categoria   Categoria @relation(fields: [categoriaId], references: [id])
  categoriaId Int
  assignedAt  DateTime  @default(now())
  assignedBy  String

  @@id([parqueId, categoriaId])
}

model Flora {
  id          Int           @id @default(autoincrement())
  nombre      String
  imagen      String
  titulo      String        //titulo es para dividir informacion de la descripcion
  descripcion String
  parques     FloraParque[]
}

model FloraParque {
  parque     Parque   @relation(fields: [parqueId], references: [id])
  parqueId   Int
  flora      Flora    @relation(fields: [floraId], references: [id])
  floraId    Int
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([parqueId, floraId])
}

model Fauna {
  id          Int           @id @default(autoincrement())
  nombre      String
  imagen      String
  titulo      String        //titulo es para dividir informacion de la descripcion
  descripcion String
  parques     FaunaParque[]
}

model FaunaParque {
  parque     Parque   @relation(fields: [parqueId], references: [id])
  parqueId   Int
  fauna      Fauna    @relation(fields: [faunaID], references: [id])
  faunaID    Int
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([parqueId, faunaID])
}

model Actividad {
  id      Int               @id @default(autoincrement())
  nombre  String
  parques ActividadParque[]
}

model ActividadParque {
  parque      Parque    @relation(fields: [parqueId], references: [id])
  parqueId    Int
  actividad   Actividad @relation(fields: [actividadId], references: [id])
  actividadId Int
  imagen      String
  assignedAt  DateTime  @default(now())
  assignedBy  String

  @@id([parqueId, actividadId])
}

//Tablas N:1
model Anuncio {
  id          Int    @id @default(autoincrement())
  titulo      String
  descripcion String
  variante    String
  parque      Parque @relation(fields: [parqueId], references: [id])
  parqueId    Int
}

model Horario {
  id         Int    @id @default(autoincrement())
  dias       String
  horaAbrir  String
  horaCerrar String
  parque     Parque @relation(fields: [parqueId], references: [id])
  parqueId   Int
}

model CartaRuta {
  id          Int    @id @default(autoincrement())
  nombre      String
  descripcion String
  parque      Parque @relation(fields: [parqueId], references: [id])
  parqueId    Int
}

model Usuario {
  id       Int    @id @default(autoincrement())
  nombre   String
  email    String
  password String
  role     Role   @default(USER)
}

enum Role {
  USER
  ADMIN
}
